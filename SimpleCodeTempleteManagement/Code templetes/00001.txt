[Title]DAO ADO 비교
저도 정확히 설명하기에는 실력이 모잘라 넵다 퍼왔습니다...^^;;;;
조금이나마 이해에 도움이 되시길 바랍니다.....


=================================================================================================
** DAO와 RDO와 ADO 비교

비주얼베이직은 처음에 로컬 데이터베이스를 최상으로 발휘할 수 있는 DAO를 발표하고 클라이언트/서버 환경에서 SQL서버, 오라클을 사용하고 다량의 데이터 베이스를 할 수 있는 RDO를 발표하였습니다. 또한 비주얼베이직 6.0에서는 최신의 기술인 ADO를 발표하였습니다. ADO는 DAO와 RDO를 기능을 가지면서 데이터베이스만이 아닌 다양한 문서를 함께 공유할 수 있는 OLE DB기술로 성장하였습니다. 각각의 기술들은 쓰임에 따라 선택의 폭이 넓어 졌다고 볼 수 있습니다. 한가지 알아둘 점은 무조건 ADO를 이용하여 프로그램을 만들기 전에 기능과 업무에 따라 다르므로 알아 보도록 합니다.

① DAO
DAO는 앞에서와 설명한 바와 같이 마이크로소프트사 젯 엔진을 사용하여 데이터베이스와 ISAM 데이터베이스를 사용할 수 있습니다. 또, DBCDirect 작업 영역을 사용하면 ODBC를 통하여 백 엔드서버(SQL서버)를 사용할 수 있습니다. 소규모의 지역적인 클라이언트/서버 환경에서 저렴한 비용으로 데이터베이스를 구축할 수 있습니다.

② RDO
RDO는 관계형 데이터베이스인 SQL서버, 오라클, 사이베이스등을 ODBC를 통해서만 데이터 베이스를 엑세스할 수 있습니다. 사실상 ODBC는 통하여 데이터베이스를 사용한다는 것은 ODBC가 표준방식이라서 호환성은 좋지만 속도는 전반적으로 떨어 집니다.
RDO는 관계형 데이터베이스를 제어하기에 편리한 개체, 속성, 메서드를 지원하여 대규모 관계형 데이터베이스 개발하기 좋은 인터페이스입니다. 
RDO에서 안타가운 점은 마이크로소프트사 젯 엔진이나 ISAM을 사용할 수 없다는 것입니다. 만약 사용하고자 한다면 DAO를 사용하기 바랍니다.

③ ADO
ADO는 DAO와 RDO의 데이터베이스 기술을 개선한 인터페이스입니다. ADO의 기능적인 사용 측면에서는 RDO와 비슷하나 Recordset개체를 사용하는 것은 DAO와 거의 유사합니다. 결국 두 모델 기술의 조합이라고 볼 수 있습니다.
ADO의 사용상의 편익은 복잡했던 개체 구조를 단순화하여 사용을 편리하게 해주었다는 것입니다. 개체구조가 단순화 되었다는 것은 개체가 속성, 메서드, 이벤트를 많이 포함한다는 것을 말해 줍니다. 그러므로 처음 DAO나 RDO 모델을 잘 모르는 사용자에게는 불편을 줄 수도 있습니다. 또한, 잘못 사용하면 계층 범위 밖에서 작성할 수도 있으므로 속성, 메서드, 이벤트의 사용방법을 충분히 이해하고 사용하기 바랍니다.
ADO는 큰 장점은 최신 기술을 사용할 수 있다는 것입니다. DHTML, 원격제어, ODBC OLE DB, 트랜젝션 서버 등을 효율적으로 이용하거나 제어할 수 있습니다. 이런 것들을 추가적으로 사용한다면 ADO를 사용하는 것이 바람직합니다.
현재(98년 10월)의 ADO는 기능의 제한성을 주고 있습니다. 실제적으로 ODBC OLE DB를 제공하여 연결되고도 ODBC 데이터 원본을 작성할 수 없습니다.

ADO는 좋은 데이터베이스 기술인 것만을 틀림없습니다. 하지만 아직 DAO나 RDO로 작업된 응용 프로그램은 바꾸기엔 부족한 부분이 많습니다. 많은 기업들이 DAO나 RDO를 이용하여 구축되어 있는데 새로운 기술인 ADO를 사용한다면 좀 더 면밀한 검토가 필요합니다. ADO와 RDO에 대한 문제점은 다음과 같습니다.

① DAO문제
현재(98년 10월) ADO는 마이크로소프트사 젯 엔진과 DDL, 그룹 등을 지원하지 못합니다. 그러므로 바꾼다는 것은 거의 불가능합니다. 하지만 단순히 DAO의 DBCDirect 작업 영역을 사용하여 클라이언트/서버 응용 프로그램을 만들었다면 몇 가지 수정으로 사용할 수 있습니다.
마이크로소프트사에서는 DAO를 ADO로 변환할 수 있도록 ADO DLL 구성요소를 제공한다고 합니다.

② RDO문제
RDO에서 지원하는 ODBC드라이버 관리자와 ODBC환경을 핸들하는 hEnv 인터페이스를 보여주는 rdoEnvironment 개체가 없습니다.

DAO, RDO, ADO중에 분명히 ADO가 전체적으로 좋은 것은 확실합니다. 그렇지만 기존 업무에 구축되어 있는 DAO나 RDO를 무조건 ADO로 바꿀 필요는 없습니다. 새로운 기술과 그에 따른 업무가 ADO의 기술이 필요로 하는 부분이 있을 때 사용하는 것이 바람직합니다. 이 책에서 DAO, RDO, ADO를 다루는 것은 업무에 따른 적절한 데이터베이스 모델을 사용하기 바라는 간절한 소망일지도 모릅니다. 우리나라(Korea)는 언제나 좋은 기술이 나왔다하면 무분별하게 구축하는 현실을 보는, 프로그래머 입장에서는 안타까운 현실이 아닐 수 없습니다.

[참 고]
소규모 업무에는 DAO를 사용하고, 일반적인 C/S 환경의 프로그램을 짠다면 ADO나 RDO를 선택하고, 인터넷/인트라넷 환경의 프로그램을 만든다면 ADO를 선택하는 것이 좋습니다.

================================================================================================= 
